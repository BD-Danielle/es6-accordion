/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/es6.accordion.js":
/*!*****************************!*\
  !*** ./js/es6.accordion.js ***!
  \*****************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * ========================================================================\n * Accordion 1.2.0\n * toggle component\n * YILING CHEN.\n * Copyright 2022, MIT License\n * How to use it:\n * see README.md\n * ========================================================================\n */\nvar Accordion = /*#__PURE__*/function () {\n  function Accordion(options) {\n    _classCallCheck(this, Accordion);\n    var selector = options.selector,\n      _options$auto = options.auto,\n      auto = _options$auto === void 0 ? true : _options$auto,\n      _options$index = options.index,\n      index = _options$index === void 0 ? 0 : _options$index,\n      _options$cls = options.cls,\n      cls = _options$cls === void 0 ? [\"fa-plus\", \"fa-minus\"] : _options$cls,\n      _options$collapsible = options.collapsible,\n      collapsible = _options$collapsible === void 0 ? true : _options$collapsible;\n    this.selector = selector;\n    this.auto = auto;\n    this.index = index;\n    this.cls = cls !== null && cls !== void 0 ? cls : ['a', 'b'];\n    this.collapsible = collapsible;\n    this.initialize();\n  }\n  _createClass(Accordion, [{\n    key: \"items\",\n    get: function get() {\n      return this.selector.querySelectorAll(\"[data-toggle-item]\");\n    }\n  }, {\n    key: \"buttons\",\n    get: function get() {\n      return this.selector.querySelectorAll(\"[data-toggle-btn]\");\n    }\n  }, {\n    key: \"contents\",\n    get: function get() {\n      return this.selector.querySelectorAll(\"[data-toggle-content]\");\n    }\n  }, {\n    key: \"toggleClass\",\n    value: function toggleClass(classList, bool) {\n      var _this$cls = _slicedToArray(this.cls, 2),\n        a = _this$cls[0],\n        b = _this$cls[1];\n      if (bool) {\n        classList.add(b);\n        classList.remove(a);\n      } else {\n        classList.add(a);\n        classList.remove(b);\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var _this = this;\n      var contents = this.contents;\n      var buttons = this.buttons;\n      var items = this.items;\n      items.forEach(function (item) {\n        return item.display = false;\n      });\n      buttons.forEach(function (button) {\n        return button.setAttribute(\"data-toggle-btn\", false);\n      });\n      if (this.index >= 0 && this.index <= items.length) {\n        var item = items[this.index];\n        item.display = true;\n        buttons[this.index].setAttribute(\"data-toggle-btn\", item.display);\n        contents[this.index].style.display = item.display ? \"block\" : \"none\";\n        this.toggleClass(buttons[this.index].children[0].classList, item.display);\n      }\n      items.forEach(function (item) {\n        item.onclick = function () {\n          if (item.display && item.display === !_this.collapsible) return;\n          var button = item.children[0];\n          var content = item.children[1];\n          if (_this.auto) {\n            buttons.forEach(function (btn, i) {\n              if (btn.getAttribute(\"data-toggle-btn\") === \"true\") {\n                _this.toggleClass(btn.children[0].classList, false);\n                btn.setAttribute(\"data-toggle-btn\", false);\n                contents[i].style.display = \"none\";\n                items[i].display = item.display;\n              }\n            });\n          }\n          item.display = !item.display;\n          button.setAttribute(\"data-toggle-btn\", item.display);\n          _this.toggleClass(button.children[0].classList, item.display);\n          content.style.display = item.display ? \"block\" : \"none\";\n        };\n      });\n    }\n  }]);\n  return Accordion;\n}();\nwindow.Accordion = Accordion;\n\n//# sourceURL=webpack://accordion/./js/es6.accordion.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/es6.accordion.js"]();
/******/ 	
/******/ })()
;